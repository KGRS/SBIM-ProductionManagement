/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package reports;

import static MainFiles.IndexPage.attachments;
import db.ConnectSql;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ravindu
 */
public class Attachements extends javax.swing.JInternalFrame {

    private final String select = "--Select--";
    private final DefaultTableModel model_Attachments;
    private final String spliter = "--";
    
    public Attachements() {
        initComponents();
        LoadDepartmentsToCombo();

        cmbBatch.requestFocus();
        model_Attachments = (DefaultTableModel) tableAttachment.getModel();
        panel1.setToolTipText("Press right mouse click to refresh.");
        buttonBrowse.setEnabled(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        panel1 = new javax.swing.JPanel();
        lbl_accountType1 = new javax.swing.JLabel();
        ButtonView = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableAttachment = new javax.swing.JTable();
        cmbBatch = new javax.swing.JComboBox();
        lbl_subAccount = new javax.swing.JLabel();
        lbl_subAccount2 = new javax.swing.JLabel();
        buttonBrowse = new javax.swing.JButton();
        lbl_subAccount3 = new javax.swing.JLabel();
        buttonUpload = new javax.swing.JButton();
        lbl_subAccount5 = new javax.swing.JLabel();
        cmbStudent = new javax.swing.JComboBox();
        textFilePath = new javax.swing.JTextField();
        textFileName = new javax.swing.JTextField();
        cmbFileType = new javax.swing.JComboBox();

        setIconifiable(true);
        setTitle("Attachements");
        setPreferredSize(new java.awt.Dimension(990, 688));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameIconified(evt);
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        panel1.setBackground(new java.awt.Color(255, 255, 255));
        panel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.TRAILING, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 1, 14), new java.awt.Color(153, 153, 153))); // NOI18N
        panel1.setForeground(new java.awt.Color(255, 255, 255));
        panel1.setPreferredSize(new java.awt.Dimension(950, 688));
        panel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panel1MouseClicked(evt);
            }
        });
        panel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbl_accountType1.setForeground(new java.awt.Color(102, 102, 102));
        lbl_accountType1.setText("Batch--year");
        panel1.add(lbl_accountType1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 80, 20));

        ButtonView.setText("View");
        ButtonView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonViewActionPerformed(evt);
            }
        });
        panel1.add(ButtonView, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 20, 110, 20));

        btnRefresh.setMnemonic('d');
        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });
        panel1.add(btnRefresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 610, 80, -1));

        jButton1.setText("Preview");
        panel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 610, 80, -1));

        btnExit.setMnemonic('e');
        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });
        btnExit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnExitKeyPressed(evt);
            }
        });
        panel1.add(btnExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 610, 80, -1));

        tableAttachment.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Student ID", "Name in initial", "File name", "File type", "Saved path"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableAttachment.getTableHeader().setReorderingAllowed(false);
        tableAttachment.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableAttachmentMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableAttachment);
        if (tableAttachment.getColumnModel().getColumnCount() > 0) {
            tableAttachment.getColumnModel().getColumn(1).setPreferredWidth(250);
        }

        panel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 930, 370));

        cmbBatch.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Select--" }));
        cmbBatch.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cmbBatchPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        cmbBatch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmbBatchKeyPressed(evt);
            }
        });
        panel1.add(cmbBatch, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 20, 290, 20));

        lbl_subAccount.setForeground(new java.awt.Color(102, 102, 102));
        lbl_subAccount.setText("Student");
        panel1.add(lbl_subAccount, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 20, 70, 20));

        lbl_subAccount2.setForeground(new java.awt.Color(102, 102, 102));
        lbl_subAccount2.setText("File name");
        panel1.add(lbl_subAccount2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 90, 20));

        buttonBrowse.setText("Browse");
        buttonBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBrowseActionPerformed(evt);
            }
        });
        panel1.add(buttonBrowse, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 170, 90, -1));

        lbl_subAccount3.setForeground(new java.awt.Color(102, 102, 102));
        lbl_subAccount3.setText("File type");
        panel1.add(lbl_subAccount3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 90, 20));

        buttonUpload.setText("Upload");
        buttonUpload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonUploadActionPerformed(evt);
            }
        });
        panel1.add(buttonUpload, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 170, 100, -1));

        lbl_subAccount5.setForeground(new java.awt.Color(102, 102, 102));
        lbl_subAccount5.setText("File path");
        panel1.add(lbl_subAccount5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, 80, 20));

        cmbStudent.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Select--" }));
        panel1.add(cmbStudent, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 20, 270, -1));

        textFilePath.setEditable(false);
        panel1.add(textFilePath, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 140, 290, -1));
        panel1.add(textFileName, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 80, 290, -1));

        cmbFileType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "jpg", "pdf" }));
        panel1.add(cmbFileType, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 110, 90, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, 973, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, 659, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void LoadDepartmentsToCombo() {
        try {
            java.sql.Statement stmt = ConnectSql.conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            String query = "select * From Departments order by DepartmentName";
            ResultSet rset = stmt.executeQuery(query);

            cmbBatch.removeAllItems();
            cmbBatch.insertItemAt("--Select--", 0);
            int position = 1;
            if (rset.next()) {
                do {
                    cmbBatch.insertItemAt(rset.getString("DepartmentName") + "--" + rset.getString("DepartmentCode"), position); // 
                    position++;
                } while (rset.next());
            }
            cmbBatch.setSelectedIndex(0);

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            JOptionPane.showMessageDialog(this, "Please contact for support.");
        }
    }

    private void ButtonViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonViewActionPerformed
        String Department = cmbBatch.getSelectedItem().toString();
        if (!Department.equals(select)) {
//            LoadToAttachmentTable();
        } else if (Department.equals(select)) {
            JOptionPane.showMessageDialog(this, "Department is not selected.", "Not selected", JOptionPane.OK_OPTION);
        }
    }//GEN-LAST:event_ButtonViewActionPerformed


    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        Refresh();
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void Refresh() {
        int x = JOptionPane.showConfirmDialog(this, "Refresh Attachments window?", "Refresh", JOptionPane.YES_NO_OPTION);
        if (x == JOptionPane.YES_OPTION) {
            cmbBatch.setEnabled(true);
            ButtonView.setEnabled(true);
            cmbBatch.setSelectedItem(select);

            textFileName.setText("");
            cmbFileType.setSelectedIndex(0);
            textFilePath.setText("");


            try {
                int rowi = model_Attachments.getRowCount();
                for (int i = 0; i < rowi; i++) {
                    model_Attachments.removeRow(0);
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                JOptionPane.showMessageDialog(this, "Please contact for support.");
            }
        }
    }

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        exit();
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnExitKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnExitKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            exit();
        }
    }//GEN-LAST:event_btnExitKeyPressed

    private void exit() {
        if (attachments != null) {
            attachments = null;
        }
        this.dispose();
    }

    private void tableAttachmentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableAttachmentMouseClicked
        
    }//GEN-LAST:event_tableAttachmentMouseClicked

    private void cmbBatchPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cmbBatchPopupMenuWillBecomeInvisible
        String text = cmbBatch.getSelectedItem().toString();
        if (text.equals(select)) {
            RefreshTable();
        }
    }//GEN-LAST:event_cmbBatchPopupMenuWillBecomeInvisible

    private void cmbBatchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmbBatchKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String text = cmbBatch.getSelectedItem().toString();
            if (text.equals(select)) {
                RefreshTable();
            }
        }
    }//GEN-LAST:event_cmbBatchKeyPressed

    private void RefreshTable() {
        try {
            int row = model_Attachments.getRowCount();
            for (int j = 0; j < row; j++) {
                model_Attachments.removeRow(0);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            JOptionPane.showMessageDialog(this, "Please contact for support.");
        }
    }



    private void panel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panel1MouseClicked
        if (SwingUtilities.isRightMouseButton(evt) || evt.isControlDown()) {
            Refresh();
        }
    }//GEN-LAST:event_panel1MouseClicked

    private void buttonBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBrowseActionPerformed
        AddToTable();
    }//GEN-LAST:event_buttonBrowseActionPerformed

    private void AddToTable() {
        int SelectedRow = tableAttachment.getSelectedRow();
        int SelectedRowCount = tableAttachment.getSelectedRowCount();
        int rowCount = tableAttachment.getRowCount();                

        if (SelectedRowCount == 1) {
            
        } else if (SelectedRowCount != 1) {
            JOptionPane.showMessageDialog(this, "Please select a single row in table.", "Not selected", JOptionPane.OK_OPTION);
        }
    }

    private void buttonUploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonUploadActionPerformed

    }//GEN-LAST:event_buttonUploadActionPerformed

    private void formInternalFrameIconified(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameIconified
        attachments.toFront();
    }//GEN-LAST:event_formInternalFrameIconified


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonView;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton buttonBrowse;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton buttonUpload;
    private javax.swing.JComboBox cmbBatch;
    private javax.swing.JComboBox cmbFileType;
    private javax.swing.JComboBox cmbStudent;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_accountType1;
    private javax.swing.JLabel lbl_subAccount;
    private javax.swing.JLabel lbl_subAccount2;
    private javax.swing.JLabel lbl_subAccount3;
    private javax.swing.JLabel lbl_subAccount5;
    private javax.swing.JPanel panel1;
    private javax.swing.JTable tableAttachment;
    private javax.swing.JTextField textFileName;
    private javax.swing.JTextField textFilePath;
    // End of variables declaration//GEN-END:variables
}
